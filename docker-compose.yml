version: "3.4"

services:
  nginx:
    build: ./nginx/
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    links:
      - php
    depends_on:
      - php
      - angular
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./api/:/var/www/html/

  angular:
    build: ./web/
    container_name: angular
    expose:
      - 4200
    ports:
      - 4200:4200
    restart: unless-stopped
    volumes:
      - ./web/:/usr/src/app/api/
      - /usr/src/app/api/node_modules

  php:
    build: ./api/
    container_name: php
    expose:
      - 9000
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - ./api/:/var/www/html/
      - ./api/docker-entrypoint:/usr/local/bin/docker-entrypoint

  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    container_name: database
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-yourbudget}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yourbudget!1234}
      - POSTGRES_USER=${POSTGRES_USER:-yourbudget}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data:rw

volumes:
  db_data:
